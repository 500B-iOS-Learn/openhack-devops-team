pipeline {
    agent any

    environment {
        APP_NAME = 'devopsoh/api-poi'
        ACR_HOST = 'openhacktce4acr.azurecr.io'
        SRC_DIR = 'apis/poi'
        IMG_TAG = "${env.BUILD_TAG}"
    }

    stages{
		stage('Install DotNetCore') {
			steps {
				sh '''
					#!/bin/bash
					INSTALLDIR="cli-tools"

					DOWNLOADER=$(which curl)
					if [ -d "$INSTALLDIR" ]
					then
						rm -rf "$INSTALLDIR"
					fi
					mkdir -p "$INSTALLDIR"
					echo Downloading the CLI installer.
					$DOWNLOADER https://dot.net/v1/dotnet-install.sh > "$INSTALLDIR/dotnet-install.sh"
					chmod +x "$INSTALLDIR/dotnet-install.sh"
					echo Installing the CLI requested version $CLI_VERSION. Please wait, installation may take a few minutes.
					"$INSTALLDIR/dotnet-install.sh" --install-dir "$INSTALLDIR" -c Current
					if [ $? -ne 0 ]
					then
						echo Download of $CLI_VERSION version of the CLI failed. Exiting now.
						exit 0
					fi
					echo The CLI has been installed.
					LOCALDOTNET="$INSTALLDIR/dotnet"
					'''
				}
			}

		stage('Unit Test') {
			steps {
				dir("${env.SRC_DIR}/tests") {
					sh '''
						#!/bin/bash -v
						$INSTALLDIR/dotnet test unittests/unittests.csproj
					'''
				}
			}
		}

        stage('Build Docker Image') {
            steps {
                dir("${env.SRC_DIR}/web") {
                    script {
                        docker.build("${env.ACR_HOST}/${env.APP_NAME}:${env.IMG_TAG}")
                    }
                }
            }
        }

        stage('Upload Docker Image to ACR') {
            steps {
                script {
                    withDockerRegistry(credentialsId: '162a5f2f-bc39-4c82-a67b-7b9eedb3afe4', url: "https://${env.ACR_HOST}") {
                        
                        docker.image("${env.ACR_HOST}/${env.APP_NAME}:${env.IMG_TAG}").push("${env.IMG_TAG}")
                    }
                }
            }
        }
    }
}